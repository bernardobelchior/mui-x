name: Performance Test

on:
  push:
    branches:
      - 'master'
      - 'next'
    paths:
      - 'packages/x-charts*/**'
  pull_request:
    types:
      - labeled
      - opened
      - synchronize
      - reopened
    branches:
      - 'master'
      - 'next'

jobs:
  performance-test:
    name: Benchmark Charts
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          run_install: false
      - name: Use Node.js 22.x
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
          cache: 'pnpm' # https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-dependencies
      - run: pnpm install --frozen-lockfile
      # Ensure we are running on the prod version of our libs
      - run: pnpm --filter "@mui/x-charts-premium..." build

      - name: Run performance tests
        run: pnpm --filter @mui-x-internal/performance-charts test:performance:ci:output

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: charts-benchmarks-results-master.json
          path: ./test/performance-charts/results.json
          if-no-files-found: error

      - uses: actions/download-artifact@v4
        with:
          name: charts-benchmarks-results-master.json
          path: ./results-master
      - run: mv ./results-master/results.json ./test/performance-charts/results-master.json

      - name: Run performance tests
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const exec = require('child_process').execSync;
            const marker = '<!-- performance-test-results -->';

            // Read results file
            let results = '{}';
            try {
              results = execSync('pnpm --filter @mui-x-internal/performance-charts test:performance:ci', 'utf8');
            } catch (error) {
              console.error('Error running performance benchmarks.', error);
            }

            const body = `${marker}
            ## ðŸ“Š Performance Test Results

            **Status:** âœ… Tests completed  
            **Commit:** ${context.sha}
            **Run:** [${context.runId}](${context.payload.repository.html_url}/actions/runs/${context.runId})

            <details>
            <summary>View Results</summary>

            \`\`\`json
            ${results}
            \`\`\`
            </details>`;

            // Get existing comments
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            // Find existing comment
            const existingComment = comments.data.find(comment => 
              comment.body.includes(marker)
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: body
              });
              console.log('Updated existing comment');
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
              console.log('Created new comment');
            }
