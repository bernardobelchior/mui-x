diff --git a/dist/client/__vitest_browser__/tester-BYDMHqQ9.js b/dist/client/__vitest_browser__/tester-BYDMHqQ9.js
index 9916c1f32e9af801b6d425d1ec785f23e830a236..0e2a404d1f40e00e607302d2207622c12c83cc97 100644
--- a/dist/client/__vitest_browser__/tester-BYDMHqQ9.js
+++ b/dist/client/__vitest_browser__/tester-BYDMHqQ9.js
@@ -11,6 +11,28 @@ const assetsURL = function(dep) {
   return "/" + dep;
 };
 const seen = {};
+async function getTestRunnerConstructor(
+    config,
+    executor,
+){
+  console.log('getting test runner constructor', config.runner);
+  if (!config.runner) {
+    const { VitestTestRunner, NodeBenchmarkRunner }
+        = await executor.executeFile(runnersFile)
+    return (
+        config.mode === 'test' ? VitestTestRunner : NodeBenchmarkRunner
+    );
+  }
+  const mod = await executor.executeId(config.runner)
+  if (!mod.default && typeof mod.default !== 'function') {
+    throw new Error(
+        `Runner must export a default function, but got ${typeof mod.default} imported from ${
+            config.runner
+        }`,
+    )
+  }
+  return mod.default;
+}
 const __vitePreload = function preload(baseModule, deps, importerUrl) {
   let promise = Promise.resolve();
   if (deps && deps.length > 0) {
@@ -1660,7 +1682,7 @@ async function initiateRunner(state, mocker, config) {
   if (cachedRunner) {
     return cachedRunner;
   }
-  const runnerClass = config.mode === "test" ? VitestTestRunner : NodeBenchmarkRunner;
+  const runnerClass = await getTestRunnerConstructor(config, executor);
   const BrowserRunner = createBrowserRunner(runnerClass, mocker, state, {
     takeCoverage: () => takeCoverageInsideWorker(config.coverage, executor)
   });
